<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" backgroundColor="#CCFFCC"
		width="100%" height="100%"
		verticalScrollPolicy="off"
		horizontalScrollPolicy="off"
		creationComplete="init();" implements="com.somewater.control.IClear">
	<mx:Script>
		<![CDATA[
		import com.pblabs.engine.entity.IEntity;
		import com.pblabs.engine.entity.PropertyReference;
		import com.somewater.rabbit.editor.events.EntitySelectedEvent;
		import com.somewater.rabbit.xml.XmlController;
		import com.somewater.rabbit.events.EditorEvent;
		import com.somewater.rabbit.storage.Config;
		import com.somewater.rabbit.storage.LevelDef;

		import flash.events.IEventDispatcher;

		import mx.controls.Alert;

		private var level:LevelDef
		private var description:Array;
		private var editorModuleChangeListener:Boolean = false;
		private var selectedTemplate:XML;
		private var escLIstener:Boolean = false;
		private var editorModule:IEventDispatcher;

		private function init():void {
			level = data as LevelDef;
			description = XmlController.instance.getDescription();
			var descriptionKeys:Array = [];
			var key:String;
			for (key in description)
				descriptionKeys.push(key);
			descriptionKeys.sort();

			for (var i:int = 0; i < descriptionKeys.length; i++) {
				key = descriptionKeys[i];
				var template:XML = description[key];
				var icon:EntityIcon = new EntityIcon();
				icon.data = template;
				icon.addEventListener(EntitySelectedEvent.ENTITY_SELECTED_EVENT, onEntitySelected)

				holder.addChild(icon);
			}

			if (!escLIstener) {
				(Config.loader as Sprite).stage.addEventListener(KeyboardEvent.KEY_DOWN, onESCPressed)
				escLIstener = true;
			}
		}

		private function onESCPressed(event:KeyboardEvent):void {
			if (event.keyCode == Keyboard.ESCAPE) {
				cancelTool();
			}
		}

		private function cancelTool():void {
			Config.game.setTemplateTool(null);
			selectedTemplate = null;
		}

		private function onEntitySelected(event:EntitySelectedEvent):void {
			selectedTemplate = event.template;

			ControlPanel.instance.hide();
			setEditorModile = Config.game.setTemplateTool("create", selectedTemplate);
		}

		public function clear():void {
			if (editorModule) {
				editorModule.removeEventListener(Event.CHANGE, onChangeEditorEvent);
				editorModule.removeEventListener('delete', onDeleteEditorEvent);
				editorModule.removeEventListener('move', onMoveEditorEvent);
			}
			(Config.loader as Sprite).stage.removeEventListener(KeyboardEvent.KEY_DOWN, onESCPressed)
			cancelTool();
		}


		private function onDeleteToolClicked():void {
			ControlPanel.instance.hide();
			setEditorModile = Config.game.setTemplateTool("delete", selectedTemplate);
		}

		private function onMoveToolClicked():void {
			ControlPanel.instance.hide();
			setEditorModile = Config.game.setTemplateTool("move", selectedTemplate);
		}


		private function set setEditorModile(editorModule:IEventDispatcher):void {
			if (!editorModuleChangeListener) {
				this.editorModule = editorModule;
				editorModule.addEventListener(Event.CHANGE, onChangeEditorEvent);
				editorModule.addEventListener('delete', onDeleteEditorEvent);
				editorModule.addEventListener('move', onMoveEditorEvent);
				editorModuleChangeListener = true;
			}
		}

		private function onChangeEditorEvent(event:EditorEvent):void {
			var entity:IEntity = event.data as IEntity;
			// <objectReference name="Crow" x="8" y="8"/>
			var child:XML = <objectReference/>
			child.@x = entity.getProperty(new PropertyReference("@Spatial.tile.x"));
			child.@y = entity.getProperty(new PropertyReference("@Spatial.tile.y"))
			child.@name = selectedTemplate.@name;
			child.@hash = entity.hash;
			var group:XML = ControlPanel.instance.level.group;
			group.appendChild(child);

			// стартовать тот же самый тул еще раз
			onEntitySelected(new EntitySelectedEvent(selectedTemplate.copy()));
		}

		private function onDeleteEditorEvent(event:EditorEvent):void {
			throw "TODO: записать в xml, стартовать тул еще раз"
		}

		private function onMoveEditorEvent(event:EditorEvent):void {
			throw "TODO: записать в xml, стартовать тул еще раз"
		}
		]]>
	</mx:Script>
	<mx:Canvas horizontalScrollPolicy="off" width="100%" height="100%">
		<mx:VBox width="100%" height="100%">
			<mx:HBox width="100%" height="20">
				<mx:Button label="delete" height="20" click="onDeleteToolClicked()"></mx:Button>
				<mx:Button label="move" height="20" click="onMoveToolClicked()"></mx:Button>
			</mx:HBox>
			<mx:VBox width="100%" height="100%" id="holder"></mx:VBox>
		</mx:VBox>
	</mx:Canvas>
</mx:Canvas>